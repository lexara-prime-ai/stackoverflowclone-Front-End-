%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2371 432
%%HiResBoundingBox: 0 0 2370.96 432
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2370.96 432 re
W
q
[0.24 0 0 -0.24 0 432] cm
q
0 0 9879.166 1799.6204 re
W*
q
[22.36211 0 0 22.373291 141.261124 -210.51888] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
86.628998 69.109001 m
86.737999 68.882004 86.806999 68.630005 86.806999 68.361 c
86.806999 28.107 l
86.806999 27.153999 86.034996 26.381001 85.080002 26.381001 c
14.92 26.381001 l
13.968 26.381001 13.194 27.153 13.194 28.107 c
13.194 68.361 l
13.194 68.630997 13.261001 68.882004 13.371 69.109001 c
5 69.109001 l
5 71.891998 l
5 72.845001 5.772 73.617996 6.726 73.617996 c
93.275002 73.617996 l
94.228004 73.617996 95.000999 72.845993 95.000999 71.891998 c
95.000999 69.109001 l
86.628998 69.109001 l
h
50 27.313 m
50.375999 27.313 50.68 27.617001 50.68 27.993 c
50.68 28.368999 50.375999 28.674 50 28.674 c
49.624001 28.674 49.32 28.368999 49.32 27.993 c
49.32 27.617001 49.624001 27.313 50 27.313 c
h
52.974998 50.714001 m
52.974998 51.938 l
25.212999 51.938 l
25.212999 50.714001 l
52.974998 50.714001 l
h
45.051998 49.876999 m
25.212999 49.876999 l
25.212999 48.653 l
45.052002 48.653 l
45.052002 49.876999 l
45.051998 49.876999 l
h
37.877998 46.637001 m
37.877998 47.860001 l
37.877998 47.861 l
25.212999 47.861 l
25.212999 47.860001 l
25.212999 46.637001 l
25.212999 46.636002 l
37.877998 46.637001 l
h
20.865999 32.169998 m
24.354 32.169998 l
24.354 33.393997 l
20.866001 33.393997 l
20.866001 32.169998 l
20.865999 32.169998 l
h
20.865999 34.23 m
29.558998 34.23 l
29.558998 35.453999 l
20.865997 35.453999 l
20.865997 34.23 l
20.865999 34.23 l
h
20.865999 36.291 m
32.459 36.291 l
32.459 37.514999 l
20.865999 37.514999 l
20.865999 36.291 l
h
20.865999 38.352001 m
29.558998 38.352001 l
29.558998 39.576 l
20.865997 39.576 l
20.865997 38.352001 l
20.865999 38.352001 l
h
20.865999 40.410999 m
29.558998 40.410999 l
29.558998 41.634998 l
20.865997 41.634998 l
20.865997 40.410999 l
20.865999 40.410999 l
h
20.865999 42.472 m
24.354 42.472 l
24.354 43.695999 l
20.866001 43.695999 l
20.866001 42.472 l
20.865999 42.472 l
h
20.865999 44.532001 m
26.696999 44.532001 l
26.696999 45.756001 l
20.865999 45.756001 l
20.865999 44.532001 l
h
20.865999 46.637001 m
24.354 46.637001 l
24.354 47.861 l
20.866001 47.861 l
20.866001 46.637001 l
20.865999 46.637001 l
h
20.865999 48.653 m
24.354 48.653 l
24.354 49.876999 l
20.866001 49.876999 l
20.866001 48.653 l
20.865999 48.653 l
h
20.865999 50.714001 m
24.354 50.714001 l
24.354 51.938 l
20.866001 51.938 l
20.866001 50.714001 l
20.865999 50.714001 l
h
20.865999 52.772999 m
48.656998 52.772999 l
48.656998 53.996998 l
20.865999 53.996998 l
20.865999 52.772999 l
h
48.657001 54.834 m
48.657001 56.058998 l
25.212999 56.058998 l
25.212999 54.834 l
48.657001 54.834 l
h
20.865999 54.834 m
24.354 54.834 l
24.354 56.058998 l
20.866001 56.058998 l
20.866001 54.834 l
20.865999 54.834 l
h
20.030001 64.300003 m
18.972 64.300003 l
18.971001 64.300003 l
18.971001 63.076004 l
18.972 63.076004 l
20.028999 63.076004 l
20.029999 63.076004 l
20.029999 64.300003 l
20.030001 64.300003 l
h
20.030001 62.240002 m
18.972 62.240002 l
18.972 62.238003 l
18.971001 62.238003 l
18.971001 61.013004 l
20.029001 61.013004 l
20.029001 61.015003 l
20.030001 61.015003 l
20.030001 62.240002 l
h
20.030001 60.178001 m
18.972 60.178001 l
18.971001 60.178001 l
18.971001 58.955002 l
18.972 58.955002 l
20.028999 58.955002 l
20.029999 58.955002 l
20.029999 60.178001 l
20.030001 60.178001 l
h
20.030001 58.118999 m
18.972 58.118999 l
18.972 58.118 l
18.971001 58.118 l
18.971001 56.894001 l
18.972 56.894001 l
20.028999 56.894001 l
20.029999 56.894001 l
20.029999 58.118999 l
20.030001 58.118999 l
h
20.030001 56.058998 m
18.972 56.058998 l
18.971001 56.058998 l
18.971001 54.834 l
18.972 54.834 l
20.028999 54.834 l
20.029999 54.834 l
20.029999 56.058998 l
20.030001 56.058998 l
h
20.030001 53.997002 m
18.972 53.997002 l
18.971001 53.997002 l
18.971001 52.773003 l
18.972 52.773003 l
20.028999 52.773003 l
20.029999 52.773003 l
20.029999 53.997002 l
20.030001 53.997002 l
h
20.030001 51.938 m
18.972 51.938 l
18.971001 51.938 l
18.971001 50.714001 l
18.972 50.714001 l
20.028999 50.714001 l
20.029999 50.714001 l
20.029999 51.938 l
20.030001 51.938 l
h
20.030001 49.876999 m
18.972 49.876999 l
18.971001 49.876999 l
18.971001 48.653 l
18.972 48.653 l
20.028999 48.653 l
20.029999 48.653 l
20.029999 49.876999 l
20.030001 49.876999 l
h
20.030001 47.817001 m
18.972 47.817001 l
18.972 47.816002 l
18.971001 47.816002 l
18.971001 46.592003 l
20.029001 46.592003 l
20.029001 46.593002 l
20.030001 46.593002 l
20.030001 47.817001 l
h
20.030001 45.756001 m
18.972 45.756001 l
18.971001 45.756001 l
18.971001 44.532001 l
18.972 44.532001 l
20.028999 44.532001 l
20.029999 44.532001 l
20.029999 45.756001 l
20.030001 45.756001 l
h
20.030001 43.695999 m
18.972 43.695999 l
18.972 43.695 l
18.971001 43.695 l
18.971001 42.471001 l
20.029001 42.471001 l
20.029001 42.472 l
20.030001 42.472 l
20.030001 43.695999 l
h
20.030001 41.634998 m
18.972 41.634998 l
18.971001 41.634998 l
18.971001 40.410999 l
18.972 40.410999 l
20.028999 40.410999 l
20.029999 40.410999 l
20.029999 41.634998 l
20.030001 41.634998 l
h
20.030001 39.576 m
18.972 39.576 l
18.972 39.575001 l
18.971001 39.575001 l
18.971001 38.351002 l
20.029001 38.351002 l
20.029001 38.352001 l
20.030001 38.352001 l
20.030001 39.576 l
h
20.030001 37.514999 m
18.972 37.514999 l
18.971001 37.514999 l
18.971001 36.291 l
18.972 36.291 l
20.028999 36.291 l
20.029999 36.291 l
20.029999 37.514999 l
20.030001 37.514999 l
h
20.030001 35.453999 m
18.972 35.453999 l
18.971001 35.453999 l
18.971001 34.23 l
18.972 34.23 l
20.028999 34.23 l
20.029999 34.23 l
20.029999 35.453999 l
20.030001 35.453999 l
h
20.030001 33.394001 m
18.972 33.394001 l
18.971001 33.394001 l
18.971001 32.169998 l
18.972 32.169998 l
20.028999 32.169998 l
20.029999 32.169998 l
20.029999 33.394001 l
20.030001 33.394001 l
h
26.697001 64.300003 m
20.866001 64.300003 l
20.866001 63.076004 l
26.697001 63.076004 l
26.697001 64.300003 l
h
27.999001 61.015999 m
27.999001 62.238998 l
27.999001 62.240997 l
20.866001 62.240997 l
20.866001 62.238998 l
20.866001 61.015999 l
20.866001 61.014 l
27.999001 61.014 l
27.999001 61.015999 l
h
35.132999 60.178001 m
20.865999 60.178001 l
20.865999 58.955002 l
35.132999 58.955002 l
35.132999 60.178001 l
h
37.877998 58.118 m
20.865999 58.118999 l
20.865999 58.118 l
20.865999 56.894001 l
37.877998 56.894001 l
37.877998 58.118 l
h
54.305 72.042999 m
45.697998 72.042999 l
45.321999 72.042999 45.016998 71.737999 45.016998 71.362999 c
45.016998 70.987999 45.321999 70.682999 45.697998 70.682999 c
54.305 70.682999 l
54.68 70.682999 54.985001 70.987999 54.985001 71.362999 c
54.985001 71.737999 54.68 72.042999 54.305 72.042999 c
h
57.299999 51.938 m
53.813 51.938 l
53.813 50.714001 l
57.299999 50.714001 l
57.299999 51.938 l
h
84.032997 66.277 m
59.849998 66.277 l
59.674999 66.277 l
59.674999 29.708 l
59.849998 29.708 l
84.033997 29.708 l
84.033997 66.277 l
84.032997 66.277 l
h
f
64.566002 48.960999 7.111 1.550999 re
f
64.566002 52.183998 14.224998 1.549 re
f
64.566002 55.405998 14.224998 1.549999 re
f
64.566002 58.630001 14.224998 1.549999 re
f
64.566002 39 14.224998 8.242001 re
f
64.566002 32.216 14.224998 4.120998 re
f
Q
q
[59.524029 0 0 59.553787 2757.0222 -37.481865] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
4.34 10.4 m
5.833334 10.413333 6.893333 10.98 7.52 12.099999 c
6.22 12.959999 l
5.766667 12.213332 5.106667 11.839999 4.24 11.839999 c
3.72 11.839999 3.283334 11.959999 2.93 12.199999 c
2.576667 12.439999 2.4 12.753332 2.4 13.139999 c
2.4 13.766666 3.18 14.219999 4.74 14.499999 c
5.86 14.699999 6.653334 15.026666 7.12 15.48 c
7.586667 15.933333 7.820001 16.539999 7.82 17.299999 c
7.82 18.219999 7.48 18.939999 6.8 19.459999 c
6.12 19.98 5.213334 20.24 4.08 20.24 c
3.2 20.24 2.476666 20.1 1.91 19.82 c
1.343333 19.539999 0.853333 19.1 0.44 18.5 c
1.68 17.540001 l
2.066666 18.006668 2.446666 18.333334 2.82 18.52 c
3.193333 18.706667 3.613333 18.799999 4.08 18.800001 c
4.68 18.800001 5.173333 18.670002 5.56 18.410002 c
5.946667 18.150002 6.14 17.800003 6.14 17.360003 c
6.14 16.90667 5.936667 16.566669 5.53 16.340002 c
5.123333 16.113335 4.446666 15.906669 3.5 15.720002 c
2.566667 15.520002 1.89 15.220002 1.47 14.820003 c
1.05 14.420003 0.84 13.86667 0.84 13.160003 c
0.84 12.373336 1.163333 11.720002 1.81 11.200003 c
2.456666 10.680003 3.3 10.413336 4.34 10.400003 c
4.34 10.4 l
h
12.36 7.98 m
12.36 10.64 l
15.12 10.64 l
15.12 11.96 l
12.36 11.96 l
12.36 16.959999 l
12.36 17.706667 12.48 18.199999 12.719999 18.439999 c
12.959999 18.679998 13.306665 18.799997 13.759999 18.799999 c
14.279999 18.799999 14.739999 18.693333 15.139999 18.48 c
15.2 19.9 l
14.666666 20.126667 14.06 20.24 13.38 20.24 c
12.42 20.24 11.75 20.003334 11.37 19.530001 c
10.99 19.056667 10.799999 18.280001 10.8 17.200001 c
10.8 11.960001 l
8.76 11.960001 l
8.76 10.640001 l
10.8 10.640001 l
10.8 7.980001 l
12.360001 7.980001 l
12.36 7.98 l
h
20.639999 10.4 m
22 10.4 22.99 10.719999 23.609999 11.36 c
24.229998 12 24.546665 12.966666 24.559999 14.26 c
24.559999 18.459999 l
24.559999 18.859999 24.606667 19.373333 24.699999 20 c
23.199999 20 l
23.133331 19.879999 23.099998 19.413334 23.099998 18.6 c
23.059998 18.6 l
22.353331 19.666668 21.326664 20.213333 19.979998 20.24 c
18.953331 20.24 18.116665 19.983334 17.469997 19.469999 c
16.82333 18.956665 16.499996 18.286665 16.499998 17.459999 c
16.499998 16.326666 16.966665 15.496666 17.899998 14.969999 c
18.83333 14.443333 20.293331 14.179999 22.279999 14.179999 c
22.999998 14.179999 l
22.999998 13.919999 l
22.999998 12.56 22.226665 11.866666 20.679998 11.839999 c
19.559998 11.839999 18.633331 12.179999 17.899998 12.859999 c
16.919998 11.839998 l
17.879999 10.906665 19.119999 10.426665 20.639997 10.399998 c
20.639999 10.4 l
h
18.18 17.299999 m
18.18 18.353333 18.866667 18.893333 20.24 18.92 c
21.053333 18.92 21.716665 18.66 22.23 18.139999 c
22.743334 17.619999 23 16.859999 23 15.86 c
23 15.5 l
21.280001 15.5 l
20.360001 15.5 19.616669 15.646667 19.050001 15.94 c
18.483334 16.233334 18.193335 16.686666 18.18 17.299999 c
h
31.74 10.4 m
33.220001 10.4 34.413334 10.893333 35.32 11.879999 c
34.079998 12.98 l
33.453331 12.219999 32.666664 11.839999 31.719997 11.839999 c
30.746664 11.839999 29.976665 12.156666 29.409998 12.789999 c
28.84333 13.423332 28.559998 14.266666 28.559998 15.319999 c
28.559998 16.32 28.863331 17.146666 29.469997 17.799999 c
30.076664 18.453333 30.826664 18.786665 31.719997 18.799999 c
32.746666 18.799999 33.539997 18.413332 34.099998 17.639999 c
35.259998 18.74 l
34.393333 19.726665 33.213333 20.226665 31.719997 20.24 c
30.293331 20.226665 29.136665 19.773333 28.249998 18.879999 c
27.363331 17.986666 26.906664 16.799999 26.879997 15.32 c
26.893332 13.826667 27.359997 12.633333 28.279997 11.74 c
29.199997 10.846666 30.353331 10.4 31.739998 10.4 c
31.74 10.4 l
h
38.619999 4.88 m
38.619999 14.76 l
42.879997 10.64 l
45.099998 10.64 l
40.579998 14.900001 l
45.559998 20 l
43.259998 20 l
38.619999 15.08 l
38.619999 20 l
37.059998 20 l
37.059998 4.88 l
38.619999 4.88 l
h
57.220001 10.4 m
58.393333 10.4 59.279999 10.74 59.880001 11.42 c
60.480003 12.1 60.780003 13.006667 60.780003 14.14 c
60.780003 20 l
59.220001 20 l
59.220001 14.32 l
59.220001 13.599999 59.053333 13.009999 58.720001 12.549999 c
58.386669 12.089999 57.84 11.853333 57.080002 11.839999 c
56.120003 11.839999 55.396671 12.156666 54.910004 12.789999 c
54.423336 13.423332 54.180004 14.299999 54.180004 15.419999 c
54.180004 20 l
52.620003 20 l
52.620003 12.719999 l
52.620003 12.653333 52.593334 11.959999 52.540001 10.639999 c
54.02 10.639999 l
54.046669 11.573333 54.060001 12.086666 54.060001 12.179999 c
54.100002 12.179999 l
54.353336 11.646666 54.763336 11.216666 55.330002 10.889999 c
55.896667 10.563333 56.526669 10.4 57.220001 10.4 c
h
68 10.4 m
69.386665 10.4 70.470001 10.836666 71.25 11.709999 c
72.029999 12.583332 72.426666 13.819999 72.440002 15.419999 c
72.440002 15.799999 l
64.880005 15.799999 l
64.960007 16.666666 65.286674 17.379999 65.860008 17.939999 c
66.433342 18.499998 67.133339 18.786665 67.960007 18.799999 c
69.226677 18.799999 70.213341 18.326666 70.920006 17.379999 c
72.100006 18.299999 l
71.606674 18.939999 71.026672 19.423332 70.360008 19.75 c
69.693344 20.076668 68.893341 20.240002 67.960007 20.24 c
66.53334 20.24 65.386673 19.776667 64.520004 18.85 c
63.653336 17.923334 63.213337 16.746668 63.200005 15.320001 c
63.200005 13.906668 63.643337 12.740001 64.530006 11.820001 c
65.416672 10.900001 66.573341 10.426667 68.000008 10.400001 c
68 10.4 l
h
70.760002 14.48 m
70.720001 13.666666 70.456673 13.023333 69.970001 12.549999 c
69.48333 12.076666 68.799995 11.839999 67.919998 11.839999 c
67.120003 11.839999 66.446671 12.066666 65.900002 12.52 c
65.353333 12.973333 65.013336 13.626666 64.880005 14.48 c
70.760002 14.48 l
h
75.379997 10.64 m
77.519997 17.84 l
77.559998 17.84 l
79.979996 10.64 l
81.619995 10.64 l
84.079994 17.84 l
84.119995 17.84 l
86.239998 10.64 l
87.919998 10.64 l
84.900002 20 l
83.360001 20 l
80.699997 12.8 l
80.659996 12.8 l
78.299995 20 l
76.699997 20 l
73.659996 10.64 l
75.379997 10.64 l
h
91.160004 4.88 m
91.160004 12 l
91.200005 12 l
92.106674 10.946667 93.226669 10.413333 94.560005 10.4 c
96.040009 10.4 97.226669 10.863333 98.120003 11.79 c
99.013336 12.716667 99.466667 13.893333 99.480003 15.32 c
99.480003 16.706667 99.03334 17.866667 98.140007 18.799999 c
97.246674 19.733332 96.133347 20.213333 94.800011 20.24 c
94.000015 20.24 93.27668 20.066666 92.630013 19.719999 c
91.983345 19.373333 91.506676 18.913332 91.200012 18.34 c
91.160011 18.34 l
91.160011 20 l
89.600014 20 l
89.600014 4.88 l
91.160011 4.88 l
91.160004 4.88 l
h
91.160004 15.32 m
91.160004 16.346666 91.476669 17.183334 92.110001 17.83 c
92.743332 18.476665 93.533333 18.799999 94.480003 18.799999 c
95.453339 18.799999 96.246666 18.476665 96.860001 17.83 c
97.473335 17.183334 97.786667 16.346666 97.800003 15.32 c
97.800003 14.306666 97.490005 13.473332 96.870003 12.82 c
96.25 12.166667 95.446671 11.84 94.459999 11.84 c
93.5 11.84 92.713333 12.163334 92.099998 12.81 c
91.486664 13.456667 91.173332 14.293334 91.159996 15.320001 c
91.160004 15.32 l
h
102.82 5.84 m
103.126663 5.84 103.393333 5.95 103.620003 6.17 c
103.846672 6.39 103.960007 6.66 103.959999 6.98 c
103.959999 7.313334 103.853333 7.586667 103.639999 7.8 c
103.426666 8.013334 103.153336 8.120001 102.82 8.12 c
102.486664 8.119999 102.213333 8.013332 102 7.8 c
101.786667 7.586667 101.68 7.313334 101.68 6.98 c
101.68 6.659999 101.793335 6.389999 102.019997 6.17 c
102.246658 5.95 102.513329 5.84 102.82 5.84 c
102.82 5.84 l
h
103.599998 10.64 m
103.599998 20 l
102.040001 20 l
102.040001 10.64 l
103.599998 10.64 l
h
110.959999 10.4 m
112.346664 10.4 113.43 10.836666 114.209999 11.709999 c
114.989998 12.583332 115.386665 13.819999 115.400002 15.419999 c
115.400002 15.799999 l
107.840004 15.799999 l
107.920006 16.666666 108.246674 17.379999 108.820007 17.939999 c
109.393341 18.499998 110.093338 18.786665 110.920006 18.799999 c
112.186676 18.799999 113.17334 18.326666 113.880005 17.379999 c
115.060005 18.299999 l
114.566673 18.939999 113.986671 19.423332 113.320007 19.75 c
112.653343 20.076668 111.85334 20.240002 110.920006 20.24 c
109.49334 20.24 108.346672 19.776667 107.480003 18.85 c
106.613335 17.923334 106.173332 16.746668 106.160004 15.320001 c
106.160004 13.906668 106.60334 12.740001 107.490005 11.820001 c
108.376671 10.900001 109.53334 10.426667 110.960007 10.400001 c
110.959999 10.4 l
h
113.720001 14.48 m
113.68 13.666666 113.416672 13.023333 112.93 12.549999 c
112.443329 12.076666 111.759995 11.839999 110.879997 11.839999 c
110.080002 11.839999 109.40667 12.066666 108.860001 12.52 c
108.313332 12.973333 107.973335 13.626666 107.840004 14.48 c
113.720001 14.48 l
h
f
Q
q
[8.855757 0 0 8.860185 4184.1519 1370.45142] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
14.42 20 m
12.64 20 l
12.64 8.64 l
8.1 14.84 l
3.58 8.64 l
3.58 20 l
1.8 20 l
1.8 5.76 l
3.68 5.76 l
8.1 11.84 l
12.520001 5.76 l
14.42 5.76 l
14.42 20 l
h
41.216 20 m
39.636002 15.860001 l
33.816002 15.860001 l
32.236 20 l
30.316 20 l
35.796001 5.76 l
37.656002 5.76 l
43.156002 20 l
41.216003 20 l
41.216 20 l
h
38.936001 14.1 m
36.736 8.34 l
34.515999 14.1 l
38.935997 14.1 l
38.936001 14.1 l
h
70.071999 20 m
64.171997 11.72 l
61.091995 14.620001 l
61.091995 20 l
59.311996 20 l
59.311996 5.76 l
61.091995 5.76 l
61.091995 12.22 l
67.951996 5.76 l
70.511993 5.76 l
65.53199 10.46 l
72.331993 20 l
70.071991 20 l
70.071999 20 l
h
88.587997 20 m
88.587997 5.76 l
97.587997 5.76 l
97.587997 7.480001 l
90.388 7.480001 l
90.388 10.820001 l
96.667999 10.820001 l
96.667999 12.6 l
90.388 12.6 l
90.388 18.24 l
97.407997 18.24 l
97.407997 20 l
88.587997 20 l
h
132.839996 20 m
132.839996 5.76 l
134.639999 5.76 l
134.639999 18.26 l
142.440002 18.26 l
142.440002 20 l
132.839996 20 l
h
159.016006 20 m
159.016006 5.76 l
168.01601 5.76 l
168.01601 7.480001 l
160.81601 7.480001 l
160.81601 10.820001 l
167.096008 10.820001 l
167.096008 12.6 l
160.81601 12.6 l
160.81601 18.24 l
167.83601 18.24 l
167.83601 20 l
159.016022 20 l
159.016006 20 l
h
194.21201 20 m
192.632 15.860001 l
186.812 15.860001 l
185.23199 20 l
183.312 20 l
188.79199 5.76 l
190.65199 5.76 l
196.15199 20 l
194.21199 20 l
194.21201 20 l
h
191.93201 14.1 m
189.73201 8.34 l
187.51201 14.1 l
191.93201 14.1 l
h
217.868 12.42 m
223.368 20 l
221.308 20 l
215.868 12.520001 l
213.828 12.520001 l
213.828 20 l
212.108 20 l
212.108 5.76 l
217.048 5.76 l
217.948 5.76 218.78801 6.12 219.42801 6.76 c
220.06801 7.4 220.42801 8.24 220.42801 9.14 c
220.42801 10.72 219.328 12.040001 217.86801 12.42 c
217.868 12.42 l
h
213.828 7.48 m
213.828 10.8 l
217.048 10.8 l
217.968 10.8 218.70801 10.06 218.70801 9.14 c
218.70801 8.22 217.968 7.480001 217.048 7.480001 c
213.828 7.480001 l
213.828 7.48 l
h
248.364 20 m
240.744 8.74 l
240.744 20 l
238.944 20 l
238.944 5.76 l
240.90401 5.76 l
248.50401 17.02 l
248.50401 5.76 l
250.30402 5.76 l
250.30402 20 l
248.36401 20 l
248.364 20 l
h
268.56 20 m
268.56 5.76 l
270.35999 5.76 l
270.35999 20 l
268.56 20 l
h
297.836 20 m
290.216 8.74 l
290.216 20 l
288.41602 20 l
288.41602 5.76 l
290.37601 5.76 l
297.97601 17.02 l
297.97601 5.76 l
299.776 5.76 l
299.776 20 l
297.836 20 l
h
324.052 10.84 m
329.97202 10.84 l
329.97202 17.139999 l
328.552 19.039999 326.31201 20.219999 323.95203 20.219999 c
319.85202 20.219999 316.51202 16.879999 316.51202 12.759999 c
316.51202 8.66 319.85202 5.319999 323.95203 5.319999 c
325.97202 5.319999 327.85202 6.119999 329.23203 7.52 c
327.91202 8.679999 l
326.87201 7.639999 325.45203 7.079999 323.95203 7.079999 c
320.81201 7.079999 318.27203 9.619999 318.27203 12.759999 c
318.27203 15.919999 320.81204 18.459999 323.95203 18.459999 c
325.61203 18.459999 327.13202 17.759998 328.23203 16.539999 c
328.23203 12.599999 l
324.05203 12.599999 l
324.05203 10.839998 l
324.052 10.84 l
h
366.08401 20 m
366.08401 5.76 l
375.08401 5.76 l
375.08401 7.480001 l
367.884 7.480001 l
367.884 10.820001 l
374.164 10.820001 l
374.164 12.6 l
367.884 12.6 l
367.884 18.24 l
374.90399 18.24 l
374.90399 20 l
366.08398 20 l
366.08401 20 l
h
401.28 20 m
399.70001 15.860001 l
393.88 15.860001 l
392.30002 20 l
390.38 20 l
395.86002 5.76 l
397.72 5.76 l
403.22 20 l
401.28 20 l
h
399 14.1 m
396.79999 8.34 l
394.57999 14.1 l
399 14.1 l
h
424.17599 20.139999 m
423.69598 20.139999 423.216 20.08 422.73599 19.98 c
421.25598 19.68 419.79599 18.939999 418.496 17.82 c
419.67599 16.479999 l
420.73599 17.4 421.91599 18.02 423.09601 18.26 c
424.09601 18.48 425.07602 18.4 425.85602 18.040001 c
426.37601 17.800001 427.27603 17.200001 427.27603 15.980001 c
427.27603 14.480001 425.67603 13.940002 424.11603 13.640001 c
423.97601 13.620001 421.73602 13.160002 420.83603 12.640001 c
419.63602 11.920001 418.99603 10.840001 418.99603 9.520001 c
418.99603 8.780002 419.23602 8.080002 419.65604 7.460002 c
420.07605 6.900002 420.65604 6.440002 421.33603 6.120001 c
422.33603 5.640001 423.51602 5.500001 424.71603 5.700001 c
426.01602 5.920001 427.33603 6.540001 428.49603 7.500001 c
427.35602 8.880001 l
425.29602 7.180001 423.29602 7.140001 422.09601 7.700001 c
421.276 8.080001 420.79602 8.780001 420.79602 9.500001 c
420.79602 10.860001 421.95602 11.380001 423.79602 11.780001 c
424.55603 11.960001 426.13602 12.22 427.07602 12.76 c
428.37601 13.480001 429.05603 14.6 429.05603 15.980001 c
429.05603 16.800001 428.83603 17.560001 428.37604 18.220001 c
427.95602 18.820002 427.31604 19.280001 426.59604 19.640001 c
425.83603 20.02 425.05603 20.140001 424.17603 20.140001 c
424.17599 20.139999 l
h
449.492 20 m
449.492 12.8 l
444.47202 5.76 l
446.67203 5.76 l
450.41202 10.98 l
454.15201 5.76 l
456.332 5.76 l
451.31201 12.799999 l
451.31201 20 l
449.492 20 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
